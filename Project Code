from nicegui import ui, app
import os
import urllib.parse

ROOT_FOLDER = '.'
all_videos = []

# Serve the current folder (videos/) at /videos
app.add_static_files('/videos', ROOT_FOLDER)

def scan_all_videos():
    all_videos.clear()
    for dirpath, _, files in os.walk(ROOT_FOLDER):
        for file in files:
            if file.lower().endswith(('.mp4', '.webm', '.ogg')):
                rel_folder = os.path.relpath(dirpath, ROOT_FOLDER).replace('\\', '/')
                encoded_folder = urllib.parse.quote(rel_folder) if rel_folder != '.' else ''
                encoded_file = urllib.parse.quote(file)

                # Build video URL
                if encoded_folder:
                    url_path = f'/videos/{encoded_folder}/{encoded_file}'
                else:
                    url_path = f'/videos/{encoded_file}'

                video_info = {
                    'name': file,
                    'folder': rel_folder,
                    'url': url_path
                }
                all_videos.append(video_info)
                print('Found video:', video_info)

name_input = ui.input(label='Search by video name (press Enter)')
folder_input = ui.input(label='Search by folder name (press Enter)')
video_gallery = ui.row().style('flex-wrap: wrap; gap: 20px; margin-top: 20px;')

def update_display():
    name_query = name_input.value.strip().lower()
    folder_query = folder_input.value.strip().lower()

    video_gallery.clear()

    matches = [
        v for v in all_videos
        if (not name_query or name_query in v['name'].lower()) and
           (not folder_query or folder_query in v['folder'].lower())
    ]

    if not matches:
        ui.notify('No matching videos found.', type='warning')
        return

    for v in matches:
        with video_gallery:
            with ui.card().tight():
                ui.video(v['url']).style('width: 300px; height: auto')
                ui.label(f"File: {v['name']} â€” Folder: {v['folder']}")

def home():
    name_input.set_value('')
    folder_input.set_value('')
    update_display()

with ui.column().style('max-width: 800px; margin: auto; margin-top: 20px; gap: 10px;'):
    ui.button('Home', on_click=home).props('color=primary')
    name_input.props('placeholder=Type video name and press Enter')
    folder_input.props('placeholder=Type folder name and press Enter')

name_input.on('keydown.enter', lambda e: update_display())
folder_input.on('keydown.enter', lambda e: update_display())

scan_all_videos()
update_display()

ui.run(port=555)

